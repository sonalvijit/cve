from flask import Flask, request, render_template
from flask_sqlalchemy import SQLAlchemy
from sqlalchemy import text

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///Cobranca.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

db = SQLAlchemy(app)

class Cobranca(db.Model):
     id = db.Column(db.Integer, primary_key=True)
     codigo = db.Column(db.String(50),unique=True, nullable=False)
     linha_digitavel = db.Column(db.String(255), nullable=False)

@app.before_request
def setup_db():
     db.create_all()
     if not Cobranca.query.first():
          db.session.add(Cobranca(codigo='12345', linha_digitavel='12345678901234567890123456789012345678901234'))
          db.session.commit()

@app.route('/')
def index():
    return render_template('index.html')

@app.route("/vuln")
def vuln():
     codigo = request.args.get('codigo','')
     raw_query = text(f"SELECT linha_digitavel FROM Cobranca WHERE codigo = '{codigo}'")
     try:
          result = db.session.execute(raw_query).fetchone()
          if result:
               return f"[VULN] Barcode: {result[0]}"
          else:
               return f"[VULN] No result found"
     except Exception as e:
          return f"[VULN] Error: {str(e)}"
     
@app.route("/safe")
def safe():
     codigo = request.args.get('codigo','')
     result = Cobranca.query.filter_by(codigo=codigo).first()
     try:
          if result:
               return f"[SAFE] Barcode: {result.linha_digitavel}"
          else:
               return f"[SAFE] No result found"
     except Exception as e:
          return f"[SAFE] Error: {str(e)}"
     
if __name__ == '__main__':
     app.run(debug=True)